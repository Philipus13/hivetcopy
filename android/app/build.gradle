def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {                                                                                 
     checkReleaseBuilds false                                                                    
    }   

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "id.hivet.apps"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

    }
    
     signingConfigs {
        file(rootProject.file('key.properties')).with { propFile ->
            if (propFile.canRead()) {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }}
            else {
                print('not signed')
            }
        }
    }

    buildTypes {
    //    release {
    //         signingConfig signingConfigs.release

    //         minifyEnabled true
    //         useProguard true
    //         shrinkResources true


    //         proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    //    }
        release {
            file(rootProject.file('key.properties')).with { propFile ->
                if (propFile.canRead()) {
                    
                    signingConfig signingConfigs.release
                    minifyEnabled true
                    useProguard true
                    shrinkResources true
                }
            }

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    output.outputFileName = "app-release.apk"
                }
            }

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug

            useProguard false
            shrinkResources false
        }
    }

   

    flavorDimensions "flavor-type"

    productFlavors {
        dev {
            dimension "flavor-type"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            manifestPlaceholders = [appName: "Hivet DEV"]
            resValue "string", "app_name", "Hivet DEV"
        }
        
        qa {
            dimension "flavor-type"
            applicationIdSuffix ".qa"
            versionNameSuffix "-qa"
            manifestPlaceholders = [appName: "Hivet QA"]
            resValue "string", "app_name", "Hivet QA"

        }
        prod {
            dimension "flavor-type"
            manifestPlaceholders = [appName: "Hivet"]
            resValue "string", "app_name", "Hivet"
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation 'com.android.support:multidex:1.0.3'

    // //For Firebase Analytics Service
    // implementation 'com.google.firebase:firebase-analytics:17.2.1'
    // //For Firebase Authentication Service
    // implementation 'com.google.firebase:firebase-auth:19.2.0'
}
